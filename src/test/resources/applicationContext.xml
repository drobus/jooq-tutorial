<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
   http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

  <context:property-placeholder location="classpath:test.properties" />
  
  <context:component-scan base-package="com.drobus" />
    
  <tx:annotation-driven transaction-manager="transactionManager" />

  <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="url" value="${database.url}" />
    <property name="driverClassName" value="${database.driver}" />
    <property name="username" value="${database.username}" />
    <property name="password" value="${database.password}" />
    <property name="removeAbandoned" value="true" />
    <property name="initialSize" value="30" />
    <property name="maxActive" value="-1" />
  </bean>

  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="datasource" />
  </bean>

  <bean id="transactionAwareDataSource"
    class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
    <constructor-arg ref="datasource" />
  </bean>

  <bean class="org.jooq.impl.DataSourceConnectionProvider" name="connectionProvider">
    <constructor-arg ref="transactionAwareDataSource" />
  </bean>

  <!-- Configure the DSL object, optionally overriding jOOQ Exceptions with 
    Spring Exceptions -->
  <bean id="dsl" class="org.jooq.impl.DefaultDSLContext">
    <constructor-arg ref="config" />
  </bean>
  
  <bean id="jooqSettings" class="org.jooq.conf.Settings">
    <!--  
    <property name="renderMapping">
        <bean class="org.jooq.conf.RenderMapping">
            <property name="schemata">
                <list>
                    <bean class="org.jooq.conf.MappedSchema">
                        <property name="input" value="share-zone"/>
                        <property name="output" value="${db.schema}"/>
                    </bean>
                </list>
            </property>
        </bean>
    </property>
    -->
  </bean>
  
  <!-- Invoking an internal, package-private constructor for the example 
    Implement your own Configuration for more reliable behaviour -->
  <bean class="org.jooq.impl.DefaultConfiguration" name="config">
    <constructor-arg index="0" ref="connectionProvider" />
    <constructor-arg index="1"><null /></constructor-arg>
    <constructor-arg index="2"><null /></constructor-arg>
    <constructor-arg index="3"><null /></constructor-arg>
    <constructor-arg index="4"><null /></constructor-arg>
    <constructor-arg index="5"><value type="org.jooq.SQLDialect">HSQLDB</value></constructor-arg>
    <constructor-arg index="6" ref="jooqSettings"/>
    <constructor-arg index="7"><null /></constructor-arg>
  </bean>
    

  <!--  
  <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
    <property name="dataSource" ref="datasource" />
    <property name="changeLog" value="classpath:changelog/changelog.xml" />
    <property name="contexts" value="test" />
    <property name="dropFirst" value="true" />
  </bean>
  -->

</beans>